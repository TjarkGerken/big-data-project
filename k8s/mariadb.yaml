#Begin: Configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: mariadb-deployment-init-configmap
data:
  mariadb-init.sql: |
    SET GLOBAL sql_mode = 'ANSI_QUOTES';

    CREATE TABLE `users` (
      `spotify_user_id` VARCHAR(22) NOT NULL,
      PRIMARY KEY (`spotify_user_id`)
    );

    CREATE TABLE `top_songs` (
      `id` INT NOT NULL AUTO_INCREMENT,
      `spotify_user_id` VARCHAR(22) NOT NULL,
      `song_name` VARCHAR(100) NOT NULL,
      `ms_played` INT NOT NULL,
      PRIMARY KEY (`id`),
      FOREIGN KEY (`spotify_user_id`) REFERENCES `users`(`spotify_user_id`)
        ON DELETE CASCADE
    );

    CREATE TABLE `top_artists` (
      `id` INT NOT NULL AUTO_INCREMENT,
      `spotify_user_id` VARCHAR(22) NOT NULL,
      `artist_name` VARCHAR(100) NOT NULL,
      `ms_played` INT NOT NULL,
      PRIMARY KEY (`id`),
      FOREIGN KEY (`spotify_user_id`) REFERENCES `users`(`spotify_user_id`)
        ON DELETE CASCADE
    );


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb-deployment
  labels:
    app: my-mariadb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-mariadb
  template:
    metadata:
      labels:
        app: my-mariadb
    spec:
      # Mount the configmap volume
      # This is an excerpt of deployment.spec.template.spec
      volumes:
        - name: init-volume
          configMap:
            name: mariadb-deployment-init-configmap
      containers:
        - name: my-mariadb
          image: mariadb
          volumeMounts:
            - name: init-volume
              mountPath: /docker-entrypoint-initdb.d/
          # Set required environment variables to initialize the container
          env:
            - name: MARIADB_ROOT_PASSWORD
              value: "mysecretpw"
            - name: MARIADB_DATABASE
              value: "spotify"
          ports:
            - containerPort: 3306

---
#Begin: Service
apiVersion: v1
kind: Service
metadata:
  name: my-app-mariadb-service
spec:
  selector:
    app: my-mariadb
  ports:
    - name: mariadb-proto
      protocol: TCP
      port: 3306
      targetPort: 3306
#End: Service
